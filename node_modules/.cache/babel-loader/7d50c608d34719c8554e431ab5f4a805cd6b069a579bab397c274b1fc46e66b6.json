{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/GitHub/quiz-app/quiz-game/src/components/Question.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Question = ({\n  question,\n  options,\n  onAnswerClick,\n  answerFeedback\n}) => {\n  _s();\n  const [selectedOption, setSelectedOption] = useState(null);\n  const handleOptionClick = option => {\n    if (!answerFeedback.answered) {\n      setSelectedOption(option);\n      onAnswerClick(option);\n      if (!isMuted) {\n        // Використовуємо правильний шлях\n        const audio = new Audio(`/sounds/${answerFeedback.isCorrect ? \"correct\" : \"incorrect\"}.mp3`);\n        audio.play();\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options-container\",\n      children: options.map((option, index) => {\n        let buttonClass = \"option-button\";\n        if (answerFeedback.answered) {\n          if (option === answerFeedback.correctAnswer) {\n            buttonClass += \" correct-answer\";\n          } else if (option === selectedOption) {\n            buttonClass += \" incorrect-answer\";\n          } else {\n            buttonClass += \" disabled-option\";\n          }\n        }\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: buttonClass,\n          onClick: () => handleOptionClick(option),\n          disabled: answerFeedback.answered,\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Question, \"JA8CxE9ZrczvRffCFoauEAbBIYg=\");\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Question","question","options","onAnswerClick","answerFeedback","_s","selectedOption","setSelectedOption","handleOptionClick","option","answered","isMuted","audio","Audio","isCorrect","play","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","buttonClass","correctAnswer","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/admin/Documents/GitHub/quiz-app/quiz-game/src/components/Question.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst Question = ({\n  question,\n  options,\n  onAnswerClick,\n  \n  answerFeedback,\n}) => {\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  const handleOptionClick = (option) => {\n    if (!answerFeedback.answered) {\n      setSelectedOption(option);\n      onAnswerClick(option);\n\n      if (!isMuted) {\n        // Використовуємо правильний шлях\n        const audio = new Audio(\n          `/sounds/${answerFeedback.isCorrect ? \"correct\" : \"incorrect\"}.mp3`\n        );\n        audio.play();\n      }\n    }\n  };\n\n  return (\n    <div className=\"question-container\">\n      <h2>{question}</h2>\n      <div className=\"options-container\">\n        {options.map((option, index) => {\n          let buttonClass = \"option-button\";\n\n          if (answerFeedback.answered) {\n            if (option === answerFeedback.correctAnswer) {\n              buttonClass += \" correct-answer\";\n            } else if (option === selectedOption) {\n              buttonClass += \" incorrect-answer\";\n            } else {\n              buttonClass += \" disabled-option\";\n            }\n          }\n\n          return (\n            <button\n              key={index}\n              className={buttonClass}\n              onClick={() => handleOptionClick(option)}\n              disabled={answerFeedback.answered}\n            >\n              {option}\n            </button>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Question;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAC;EAChBC,QAAQ;EACRC,OAAO;EACPC,aAAa;EAEbC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMW,iBAAiB,GAAIC,MAAM,IAAK;IACpC,IAAI,CAACL,cAAc,CAACM,QAAQ,EAAE;MAC5BH,iBAAiB,CAACE,MAAM,CAAC;MACzBN,aAAa,CAACM,MAAM,CAAC;MAErB,IAAI,CAACE,OAAO,EAAE;QACZ;QACA,MAAMC,KAAK,GAAG,IAAIC,KAAK,CACrB,WAAWT,cAAc,CAACU,SAAS,GAAG,SAAS,GAAG,WAAW,MAC/D,CAAC;QACDF,KAAK,CAACG,IAAI,CAAC,CAAC;MACd;IACF;EACF,CAAC;EAED,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjClB,OAAA;MAAAkB,QAAA,EAAKhB;IAAQ;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnBtB,OAAA;MAAKiB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAC/Bf,OAAO,CAACoB,GAAG,CAAC,CAACb,MAAM,EAAEc,KAAK,KAAK;QAC9B,IAAIC,WAAW,GAAG,eAAe;QAEjC,IAAIpB,cAAc,CAACM,QAAQ,EAAE;UAC3B,IAAID,MAAM,KAAKL,cAAc,CAACqB,aAAa,EAAE;YAC3CD,WAAW,IAAI,iBAAiB;UAClC,CAAC,MAAM,IAAIf,MAAM,KAAKH,cAAc,EAAE;YACpCkB,WAAW,IAAI,mBAAmB;UACpC,CAAC,MAAM;YACLA,WAAW,IAAI,kBAAkB;UACnC;QACF;QAEA,oBACEzB,OAAA;UAEEiB,SAAS,EAAEQ,WAAY;UACvBE,OAAO,EAAEA,CAAA,KAAMlB,iBAAiB,CAACC,MAAM,CAAE;UACzCkB,QAAQ,EAAEvB,cAAc,CAACM,QAAS;UAAAO,QAAA,EAEjCR;QAAM,GALFc,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMJ,CAAC;MAEb,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChB,EAAA,CAvDIL,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAyDd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}