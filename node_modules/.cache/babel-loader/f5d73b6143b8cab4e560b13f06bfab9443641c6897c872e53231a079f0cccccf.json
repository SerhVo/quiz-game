{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/GitHub/quiz-app/quiz-game/src/components/Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Question from \"./Question\";\nimport Results from \"./Results\";\nimport questionsData from \"../questions.txt\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quiz = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showResults, setShowResults] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(30);\n  const [timerRunning, setTimerRunning] = useState(false);\n  const [isStarted, setIsStarted] = useState(false); // Новий стан для початку гри\n\n  // Завантаження питань з текстового файлу\n  useEffect(() => {\n    fetch(questionsData).then(response => response.text()).then(text => {\n      const lines = text.trim().split(\"\\n\");\n      const parsedQuestions = lines.map(line => {\n        const [question, ...rest] = line.split(\"|\");\n        const correctAnswer = rest.pop();\n        const options = rest;\n        return {\n          question,\n          options,\n          correctAnswer\n        };\n      });\n      setQuestions(parsedQuestions);\n    });\n  }, []);\n\n  // Таймер для кожного питання\n  useEffect(() => {\n    if (timerRunning && timeLeft > 0) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n      return () => clearTimeout(timer);\n    } else if (timeLeft === 0) {\n      handleAnswerClick(null);\n    }\n  }, [timeLeft, timerRunning]);\n\n  // Запуск таймера при переході до нового питання\n  useEffect(() => {\n    if (isStarted && questions.length > 0 && currentQuestionIndex < questions.length) {\n      setTimeLeft(30);\n      setTimerRunning(true);\n    }\n  }, [currentQuestionIndex, questions, isStarted]);\n  const handleAnswerClick = selectedOption => {\n    setTimerRunning(false);\n    const currentQuestion = questions[currentQuestionIndex];\n    if (selectedOption === currentQuestion.correctAnswer) {\n      setScore(score + 1);\n    }\n    const nextQuestionIndex = currentQuestionIndex + 1;\n    if (nextQuestionIndex < questions.length) {\n      setCurrentQuestionIndex(nextQuestionIndex);\n    } else {\n      setShowResults(true);\n    }\n  };\n  const handleStartQuiz = () => {\n    setIsStarted(true);\n  };\n  if (questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Умовний рендеринг: показуємо кнопку \"Старт\", якщо гра не почалася\n  if (!isStarted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"start-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0413\\u043E\\u0442\\u043E\\u0432\\u0456 \\u0434\\u043E \\u0432\\u0438\\u043F\\u0440\\u043E\\u0431\\u0443\\u0432\\u0430\\u043D\\u043D\\u044F?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start-button\",\n        onClick: handleStartQuiz,\n        children: \"\\u041F\\u043E\\u0447\\u0430\\u0442\\u0438 \\u041A\\u0432\\u0456\\u0437\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Якщо квіз завершено, показуємо результати\n  if (showResults) {\n    return /*#__PURE__*/_jsxDEV(Results, {\n      score: score,\n      totalQuestions: questions.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Інакше показуємо поточне питання\n  const currentQuestion = questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: [\"\\u0427\\u0430\\u0441: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: timeLeft <= 5 ? \"red-text\" : \"\",\n        children: timeLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Question, {\n      question: currentQuestion.question,\n      options: currentQuestion.options,\n      onAnswerClick: handleAnswerClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"kG2ekEJUdw3QSN7SwfviOm4jSAg=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","Question","Results","questionsData","jsxDEV","_jsxDEV","Quiz","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","showResults","setShowResults","timeLeft","setTimeLeft","timerRunning","setTimerRunning","isStarted","setIsStarted","fetch","then","response","text","lines","trim","split","parsedQuestions","map","line","question","rest","correctAnswer","pop","options","timer","setTimeout","clearTimeout","handleAnswerClick","length","selectedOption","currentQuestion","nextQuestionIndex","handleStartQuiz","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","totalQuestions","onAnswerClick","_c","$RefreshReg$"],"sources":["/Users/admin/Documents/GitHub/quiz-app/quiz-game/src/components/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Question from \"./Question\";\nimport Results from \"./Results\";\nimport questionsData from \"../questions.txt\";\n\nconst Quiz = () => {\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showResults, setShowResults] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(30);\n  const [timerRunning, setTimerRunning] = useState(false);\n  const [isStarted, setIsStarted] = useState(false); // Новий стан для початку гри\n\n  // Завантаження питань з текстового файлу\n  useEffect(() => {\n    fetch(questionsData)\n      .then((response) => response.text())\n      .then((text) => {\n        const lines = text.trim().split(\"\\n\");\n        const parsedQuestions = lines.map((line) => {\n          const [question, ...rest] = line.split(\"|\");\n          const correctAnswer = rest.pop();\n          const options = rest;\n          return {\n            question,\n            options,\n            correctAnswer,\n          };\n        });\n        setQuestions(parsedQuestions);\n      });\n  }, []);\n\n  // Таймер для кожного питання\n  useEffect(() => {\n    if (timerRunning && timeLeft > 0) {\n      const timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n      return () => clearTimeout(timer);\n    } else if (timeLeft === 0) {\n      handleAnswerClick(null);\n    }\n  }, [timeLeft, timerRunning]);\n\n  // Запуск таймера при переході до нового питання\n  useEffect(() => {\n    if (\n      isStarted &&\n      questions.length > 0 &&\n      currentQuestionIndex < questions.length\n    ) {\n      setTimeLeft(30);\n      setTimerRunning(true);\n    }\n  }, [currentQuestionIndex, questions, isStarted]);\n\n  const handleAnswerClick = (selectedOption) => {\n    setTimerRunning(false);\n    const currentQuestion = questions[currentQuestionIndex];\n    if (selectedOption === currentQuestion.correctAnswer) {\n      setScore(score + 1);\n    }\n\n    const nextQuestionIndex = currentQuestionIndex + 1;\n    if (nextQuestionIndex < questions.length) {\n      setCurrentQuestionIndex(nextQuestionIndex);\n    } else {\n      setShowResults(true);\n    }\n  };\n\n  const handleStartQuiz = () => {\n    setIsStarted(true);\n  };\n\n  if (questions.length === 0) {\n    return <div>Завантаження...</div>;\n  }\n\n  // Умовний рендеринг: показуємо кнопку \"Старт\", якщо гра не почалася\n  if (!isStarted) {\n    return (\n      <div className=\"start-container\">\n        <h2>Готові до випробування?</h2>\n        <button className=\"start-button\" onClick={handleStartQuiz}>\n          Почати Квіз\n        </button>\n      </div>\n    );\n  }\n\n  // Якщо квіз завершено, показуємо результати\n  if (showResults) {\n    return <Results score={score} totalQuestions={questions.length} />;\n  }\n\n  // Інакше показуємо поточне питання\n  const currentQuestion = questions[currentQuestionIndex];\n\n  return (\n    <div className=\"quiz-container\">\n      <div className=\"timer\">\n        Час: <span className={timeLeft <= 5 ? \"red-text\" : \"\"}>{timeLeft}</span>\n      </div>\n      <Question\n        question={currentQuestion.question}\n        options={currentQuestion.options}\n        onAnswerClick={handleAnswerClick}\n      />\n    </div>\n  );\n};\n\nexport default Quiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}